
ORIGIN 0
SEGMENT CodeSegment:

Start:
    LEA R0, BLOCKA
    LEA R1, BLOCKB    

    LDR R2, R0, BA01  ; hit 
    LDR R3, R0, BA09  ; miss
    LDR R4, R0, BA17  ; miss
    LDR R5, R0, BA25  ; miss
    
    LDR R6, R1, BA33  ; miss
    LDR R7, R1, BA41  ; miss 
    LDR R2, R1, BA49  ; miss
    LDR R3, R1, BA57  ; miss 
    
    ;; check replace states
    LDR R2, R1, BA01  
    ADD R2, R2, 1     
    STR R2, R1, BA01       
    LDR R2, R1, BA01  
    ADD R3, R3, 1     
    STR R3, R1, BA57 
    LDR R3, R1, BA57  
    STR R5, R0, BA01  
    STR R5, R0, BA02 
    STR R3, R0, BA24
    STR R2, R1, BA69 
    LDR R3, R0, BA01
    LDR R2, R1, BA66
    LDR R5, R1, BA09
    STR R4, R0, BA01
    LDR R4, R0, BA01
    LEA R3, BLOCKC
    LDR R4, R3, BA65
    LDR R5, R3, BA72
    LDR R6, R3, BA80
    LDR R6, R3, BA88
    LDR R7, R3, BA90
    STR R4, R1, BA30
    ADD R6, R5, 10
    STR R6, R3, BA88
    LDR R6, R3, BA87
    LDR R4, R3, BA89
    
    BRnzp cont


INF:
    BRnzp INF         ; loop

SEGMENT BLOCKA:
BA01: DATA2 4x600D;
BA02: DATA2 4x600D;
BA03: DATA2 4x600D;
BA04: DATA2 4x600D;
BA05: DATA2 4x600D;
BA06: DATA2 4x600D;
BA07: DATA2 4x600D;
BA08: DATA2 4x600D;
   
BA09: DATA2 4xBAAD;
BA10: DATA2 4xBAAD;
BA11: DATA2 4xBAAD;
BA12: DATA2 4xBAAD;
BA13: DATA2 4xBAAD;
BA14: DATA2 4xBAAD;
BA15: DATA2 4xBAAD;
BA16: DATA2 4xBAAD;
 
BA17: DATA2 4xFEEE;
BA18: DATA2 4xFEEE;
BA19: DATA2 4xFEEE;
BA20: DATA2 4xFEEE;
BA21: DATA2 4xFEEE;
BA22: DATA2 4xFEEE;
BA23: DATA2 4xFEEE;
BA24: DATA2 4xFEEE;

BA25: DATA2 4xCEEE;
BA26: DATA2 4xCEEE;
BA27: DATA2 4xCEEE;
BA28: DATA2 4xCEEE;
BA29: DATA2 4xCEEE;
BA30: DATA2 4xCEEE;
BA31: DATA2 4xCEEE;
BA32: DATA2 4xCEEE;

SEGMENT BLOCKB:
BA33: DATA2 4x600F;
BA34: DATA2 4x600F;
BA35: DATA2 4x600F;
BA36: DATA2 4x600F;
BA37: DATA2 4x600F;
BA38: DATA2 4x600F;
BA39: DATA2 4x600F;
BA40: DATA2 4x600F;
   
BA41: DATA2 4xBAAE;
BA42: DATA2 4xBAAE;
BA43: DATA2 4xBAAE;
BA44: DATA2 4xBAAE;
BA45: DATA2 4xBAAE;
BA46: DATA2 4xBAAE;
BA47: DATA2 4xBAAE;
BA48: DATA2 4xBAAE;
 
BA49: DATA2 4xFEED;
BA50: DATA2 4xFEED;
BA51: DATA2 4xFEED;
BA52: DATA2 4xFEED;
BA53: DATA2 4xFEED;
BA54: DATA2 4xFEED;
BA55: DATA2 4xFEED;
BA56: DATA2 4xFEED;

BA57: DATA2 4xCEED;
BA58: DATA2 4xCEED;
BA59: DATA2 4xCEED;
BA60: DATA2 4xCEED;
BA61: DATA2 4xCEED;
BA62: DATA2 4xCEED;
BA63: DATA2 4xCEED;
BA64: DATA2 4xCEED;

cont:

    LDR R2, R1, BA01  
    ADD R2, R2, 1     
    STR R2, R1, BA01       
    LDR R2, R1, BA01 
    ADD R3, R3, 1    
    STR R3, R1, BA57 
    LDR R3, R1, BA57  
    STR R5, R0, BA01  
    STR R5, R0, BA02 
    STR R3, R0, BA24
    STR R2, R1, BA69 
    LDR R3, R0, BA01
    ;; check evict state
    LEA R3, BLOCKC
    LDR R4, R3, BA65
    LDR R5, R3, BA72
    LDR R6, R3, BA80
    LDR R6, R3, BA88
    LDR R7, R3, BA90
    STR R4, R1, BA30
    ADD R6, R5, 10
    STR R6, R3, BA88
    LDR R6, R3, BA87
    LDR R4, R3, BA89

    BRnzp INF


SEGMENT BLOCKC:
BA65: DATA2 4x6004;
BA66: DATA2 4x6004;
BA67: DATA2 4x6004;
BA68: DATA2 4x6004;
BA69: DATA2 4x6004;
BA70: DATA2 4x6004;
BA71: DATA2 4x6004;
  
BA72: DATA2 4xBAAF;
BA73: DATA2 4xBAAF;
BA74: DATA2 4xBAAF;
BA75: DATA2 4xBAAF;
BA76: DATA2 4xBAAF;
BA77: DATA2 4xBAAF;
BA78: DATA2 4xBAAF;
BA79: DATA2 4xBAAF;
 
BA80: DATA2 4xFEEC;
BA81: DATA2 4xFEEC;
BA82: DATA2 4xFEEC;
BA83: DATA2 4xFEEC;
BA84: DATA2 4xFEEC;
BA85: DATA2 4xFEEC;
BA86: DATA2 4xFEEC;
BA87: DATA2 4xFEEC;

BA88: DATA2 4x5EED;
BA89: DATA2 4x5EED;
BA90: DATA2 4x5EED;
BA91: DATA2 4x5EED;
BA92: DATA2 4x5EED;
BA93: DATA2 4x5EED;
BA94: DATA2 4x5EED;
BA95: DATA2 4x5EED;


